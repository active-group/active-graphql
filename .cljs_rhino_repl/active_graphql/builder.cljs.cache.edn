{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name active-graphql.builder, :imports nil, :requires {c active-graphql.core, active-graphql.core active-graphql.core, lens active.clojure.lens, active.clojure.lens active.clojure.lens}, :uses nil, :defs {$int {:protocol-inline nil, :meta {:file "/Users/marcoschneider/Work/active-graphql/src/active_graphql/builder.cljs", :line 6, :column 7, :end-line 6, :end-column 11, :arglists (quote ([value]))}, :name active-graphql.builder/$int, :variadic false, :file "/Users/marcoschneider/Work/active-graphql/src/active_graphql/builder.cljs", :end-column 11, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}, query {:protocol-inline nil, :meta {:file "/Users/marcoschneider/Work/active-graphql/src/active_graphql/builder.cljs", :line 30, :column 7, :end-line 30, :end-column 12, :arglists (quote ([selection-set & [opts]])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(selection-set [opts])], :arglists ([selection-set & [opts]]), :arglists-meta (nil)}}, :name active-graphql.builder/query, :variadic true, :file "/Users/marcoschneider/Work/active-graphql/src/active_graphql/builder.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(selection-set [opts])], :arglists ([selection-set & [opts]]), :arglists-meta (nil)}, :method-params [(selection-set [opts])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 1, :fn-var true, :arglists ([selection-set & [opts]])}, $null {:name active-graphql.builder/$null, :file "/Users/marcoschneider/Work/active-graphql/src/active_graphql/builder.cljs", :line 18, :column 1, :end-line 18, :end-column 11, :meta {:file "/Users/marcoschneider/Work/active-graphql/src/active_graphql/builder.cljs", :line 18, :column 6, :end-line 18, :end-column 11}, :tag any}, select {:protocol-inline nil, :meta {:file "/Users/marcoschneider/Work/active-graphql/src/active_graphql/builder.cljs", :line 54, :column 7, :end-line 54, :end-column 13, :arglists (quote ([& fields])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(fields)], :arglists ([& fields]), :arglists-meta (nil)}}, :name active-graphql.builder/select, :variadic true, :file "/Users/marcoschneider/Work/active-graphql/src/active_graphql/builder.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(fields)], :arglists ([& fields]), :arglists-meta (nil)}, :method-params [(fields)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 0, :fn-var true, :arglists ([& fields])}, $object {:protocol-inline nil, :meta {:file "/Users/marcoschneider/Work/active-graphql/src/active_graphql/builder.cljs", :line 25, :column 7, :end-line 25, :end-column 14, :arglists (quote ([values-map]))}, :name active-graphql.builder/$object, :variadic false, :file "/Users/marcoschneider/Work/active-graphql/src/active_graphql/builder.cljs", :end-column 14, :method-params ([values-map]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 1, :fn-var true, :arglists (quote ([values-map]))}, $list {:protocol-inline nil, :meta {:file "/Users/marcoschneider/Work/active-graphql/src/active_graphql/builder.cljs", :line 22, :column 7, :end-line 22, :end-column 12, :arglists (quote ([& values])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(values)], :arglists ([& values]), :arglists-meta (nil)}}, :name active-graphql.builder/$list, :variadic true, :file "/Users/marcoschneider/Work/active-graphql/src/active_graphql/builder.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(values)], :arglists ([& values]), :arglists-meta (nil)}, :method-params [(values)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 0, :fn-var true, :arglists ([& values])}, $float {:protocol-inline nil, :meta {:file "/Users/marcoschneider/Work/active-graphql/src/active_graphql/builder.cljs", :line 9, :column 7, :end-line 9, :end-column 13, :arglists (quote ([value]))}, :name active-graphql.builder/$float, :variadic false, :file "/Users/marcoschneider/Work/active-graphql/src/active_graphql/builder.cljs", :end-column 13, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}, field {:protocol-inline nil, :meta {:file "/Users/marcoschneider/Work/active-graphql/src/active_graphql/builder.cljs", :line 46, :column 7, :end-line 46, :end-column 12, :arglists (quote ([name & [opts]])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(name [opts])], :arglists ([name & [opts]]), :arglists-meta (nil)}}, :name active-graphql.builder/field, :variadic true, :file "/Users/marcoschneider/Work/active-graphql/src/active_graphql/builder.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(name [opts])], :arglists ([name & [opts]]), :arglists-meta (nil)}, :method-params [(name [opts])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 1, :fn-var true, :arglists ([name & [opts]])}, $boolean {:protocol-inline nil, :meta {:file "/Users/marcoschneider/Work/active-graphql/src/active_graphql/builder.cljs", :line 12, :column 7, :end-line 12, :end-column 15, :arglists (quote ([value]))}, :name active-graphql.builder/$boolean, :variadic false, :file "/Users/marcoschneider/Work/active-graphql/src/active_graphql/builder.cljs", :end-column 15, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}, mutation {:protocol-inline nil, :meta {:file "/Users/marcoschneider/Work/active-graphql/src/active_graphql/builder.cljs", :line 38, :column 7, :end-line 38, :end-column 15, :arglists (quote ([selection-set & [opts]])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(selection-set [opts])], :arglists ([selection-set & [opts]]), :arglists-meta (nil)}}, :name active-graphql.builder/mutation, :variadic true, :file "/Users/marcoschneider/Work/active-graphql/src/active_graphql/builder.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(selection-set [opts])], :arglists ([selection-set & [opts]]), :arglists-meta (nil)}, :method-params [(selection-set [opts])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 1, :fn-var true, :arglists ([selection-set & [opts]])}, $enum {:protocol-inline nil, :meta {:file "/Users/marcoschneider/Work/active-graphql/src/active_graphql/builder.cljs", :line 19, :column 7, :end-line 19, :end-column 12, :arglists (quote ([value]))}, :name active-graphql.builder/$enum, :variadic false, :file "/Users/marcoschneider/Work/active-graphql/src/active_graphql/builder.cljs", :end-column 12, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}, build {:protocol-inline nil, :meta {:file "/Users/marcoschneider/Work/active-graphql/src/active_graphql/builder.cljs", :line 62, :column 7, :end-line 62, :end-column 12, :arglists (quote ([query]))}, :name active-graphql.builder/build, :variadic false, :file "/Users/marcoschneider/Work/active-graphql/src/active_graphql/builder.cljs", :end-column 12, :method-params ([query]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 62, :end-line 62, :max-fixed-arity 1, :fn-var true, :arglists (quote ([query]))}, $string {:protocol-inline nil, :meta {:file "/Users/marcoschneider/Work/active-graphql/src/active_graphql/builder.cljs", :line 15, :column 7, :end-line 15, :end-column 14, :arglists (quote ([value]))}, :name active-graphql.builder/$string, :variadic false, :file "/Users/marcoschneider/Work/active-graphql/src/active_graphql/builder.cljs", :end-column 14, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}, graphql {:protocol-inline nil, :meta {:file "/Users/marcoschneider/Work/active-graphql/src/active_graphql/builder.cljs", :line 58, :column 7, :end-line 58, :end-column 14, :arglists (quote ([& defs])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(defs)], :arglists ([& defs]), :arglists-meta (nil)}}, :name active-graphql.builder/graphql, :variadic true, :file "/Users/marcoschneider/Work/active-graphql/src/active_graphql/builder.cljs", :end-column 14, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(defs)], :arglists ([& defs]), :arglists-meta (nil)}, :method-params [(defs)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 58, :end-line 58, :max-fixed-arity 0, :fn-var true, :arglists ([& defs])}}, :require-macros {lens active.clojure.lens, active.clojure.lens active.clojure.lens}, :cljs.analyzer/constants {:seen #{:args :name :alias :select :vars}, :order [:vars :name :alias :args :select]}, :doc nil}